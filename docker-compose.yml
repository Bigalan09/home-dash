services:
  # Nginx web server for static files
  web:
    image: nginx:alpine
    container_name: homedashboard-web
    ports:
      - "${WEB_PORT:-3000}:80"
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html:ro
      - ./styles.css:/usr/share/nginx/html/styles.css:ro
      - ./modern-light.css:/usr/share/nginx/html/modern-light.css:ro
      - ./futuristic.css:/usr/share/nginx/html/futuristic.css:ro
      - ./script.js:/usr/share/nginx/html/script.js:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - dashboard-network
    labels:
      - "com.homedashboard.service=web"
      - "com.homedashboard.description=Static file server for Pi Touch Display 2"

  # Redis cache service
  redis:
    image: redis:7-alpine
    container_name: homedashboard-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    expose:
      - "6379"
    restart: unless-stopped
    networks:
      - dashboard-network
    labels:
      - "com.homedashboard.service=redis"
      - "com.homedashboard.description=Redis cache for API responses"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API backend service
  api:
    build: .
    container_name: homedashboard-api
    environment:
      - TODOIST_API_KEY=${TODOIST_API_KEY:-}
      - TODOIST_BASE_URL=${TODOIST_BASE_URL:-https://api.todoist.com/rest/v2}
      - APPLE_CALENDAR_URL=${APPLE_CALENDAR_URL:-}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY:-}
      - WEATHER_LOCATION=${WEATHER_LOCATION:-London,GB}
      - WEATHER_UNITS=${WEATHER_UNITS:-metric}
      - TIME_API_URL=${TIME_API_URL:-http://worldtimeapi.org/api/timezone/Europe/London}
      - PORT=3001
      - NODE_ENV=${NODE_ENV:-production}
      - REDIS_URL=redis://redis:6379
    volumes:
      - dashboard-data:/app/data
      - ./.env:/app/.env:ro
    expose:
      - "3001"
    restart: unless-stopped
    networks:
      - dashboard-network
    depends_on:
      - redis
    labels:
      - "com.homedashboard.service=api"
      - "com.homedashboard.description=API backend for dashboard integrations"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/time"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Commander web UI
  # redis_commander:
  #   image: ghcr.io/joeferner/redis-commander:latest
  #   container_name: homedashboard-redis-commander
  #   ports:
  #     - "${REDIS_COMMANDER_PORT:-8081}:8081"
  #   environment:
  #     # Format label:host:port:dbIndex:password
  #     REDIS_HOSTS: "local:redis:6379"
  #     # Optional basic auth for the UI
  #     # HTTP_USER: ${REDIS_COMMANDER_USER:-}
  #     # HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-}
  #   depends_on:
  #     - redis
  #   restart: unless-stopped
  #   networks:
  #     - dashboard-network
  #   labels:
  #     - "com.homedashboard.service=redis-commander"
  #     - "com.homedashboard.description=Web UI for Redis"

networks:
  dashboard-network:
    driver: bridge

volumes:
  dashboard-data:
    driver: local
    labels:
      - "com.homedashboard.volume=data"
  redis-data:
    driver: local
    labels:
      - "com.homedashboard.volume=redis-cache"
